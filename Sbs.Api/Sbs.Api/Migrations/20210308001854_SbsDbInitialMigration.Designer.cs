// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sbs.Api.Contexts;

namespace Sbs.Api.Migrations
{
    [DbContext(typeof(SbsDbContext))]
    [Migration("20210308001854_SbsDbInitialMigration")]
    partial class SbsDbInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.1.21102.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sbs.Api.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "3",
                            LoginName = "r",
                            Name = "Rit",
                            Password = "pass"
                        });
                });

            modelBuilder.Entity("Sbs.Api.Data.Entities.WordDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WordType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Word = "Italy",
                            WordType = 0
                        },
                        new
                        {
                            Id = 2,
                            Word = "India",
                            WordType = 0
                        },
                        new
                        {
                            Id = 3,
                            Word = "France",
                            WordType = 0
                        },
                        new
                        {
                            Id = 4,
                            Word = "Asia",
                            WordType = 0
                        },
                        new
                        {
                            Id = 5,
                            Word = "Paris",
                            WordType = 0
                        },
                        new
                        {
                            Id = 6,
                            Word = "Vienna",
                            WordType = 0
                        },
                        new
                        {
                            Id = 7,
                            Word = "Texas",
                            WordType = 0
                        },
                        new
                        {
                            Id = 8,
                            Word = "Poole",
                            WordType = 0
                        },
                        new
                        {
                            Id = 9,
                            Word = "Denmark",
                            WordType = 1
                        },
                        new
                        {
                            Id = 10,
                            Word = "Germany",
                            WordType = 1
                        },
                        new
                        {
                            Id = 11,
                            Word = "Munich",
                            WordType = 1
                        },
                        new
                        {
                            Id = 12,
                            Word = "England",
                            WordType = 1
                        },
                        new
                        {
                            Id = 13,
                            Word = "Scotland",
                            WordType = 1
                        },
                        new
                        {
                            Id = 14,
                            Word = "Cyprus",
                            WordType = 1
                        },
                        new
                        {
                            Id = 15,
                            Word = "Delhi",
                            WordType = 1
                        },
                        new
                        {
                            Id = 16,
                            Word = "London",
                            WordType = 1
                        },
                        new
                        {
                            Id = 17,
                            Word = "Armsterdam",
                            WordType = 2
                        },
                        new
                        {
                            Id = 18,
                            Word = "Australia",
                            WordType = 2
                        },
                        new
                        {
                            Id = 19,
                            Word = "America",
                            WordType = 2
                        },
                        new
                        {
                            Id = 20,
                            Word = "Continent",
                            WordType = 2
                        },
                        new
                        {
                            Id = 21,
                            Word = "Luxemburg",
                            WordType = 2
                        },
                        new
                        {
                            Id = 22,
                            Word = "Portugal",
                            WordType = 2
                        },
                        new
                        {
                            Id = 23,
                            Word = "Argentina",
                            WordType = 2
                        },
                        new
                        {
                            Id = 24,
                            Word = "Switzerland",
                            WordType = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
